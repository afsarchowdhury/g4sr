# Set up ---------------------------
g4s_setup <- function(api.key) {
if (missing(api.key))
api_key <- readline("Please enter your API key: ")
api_headers <- paste0("Bearer ", api_key)
assign("api_headers", api_headers, envir = .GlobalEnv)
}
g4s_setup()
path_base <- "https://api.go4schools.com/customer/v1/"
path_base02 <- "https://api.go4schools.com/customer/v1/academic-years/"
path_contacts_parental <- "contacts/parental"
path_school <- "school"
path_student <- "/students"
path_teaching <- "/teaching"
path_timetables <- "/timetables"
path_users <- "/users"
# Set up ---------------------------
g4s_setup <- function(api.key) {
if (missing(api_key))
api_key <- readline("Please enter your API key: ")
api_headers <- paste0("Bearer ", api_key)
assign("api_headers", api_headers, envir = .GlobalEnv)
}
# Set up ---------------------------
g4s_setup <- function(api_key) {
if (missing(api_key))
api_key <- readline("Please enter your API key: ")
api_headers <- paste0("Bearer ", api_key)
assign("api_headers", api_headers, envir = .GlobalEnv)
}
g4s_setup()
data.frame(x = seq(1:10, 1),
y = seq(10:1, 1))
data.frame(x = seq(1, 10, 1),
y = seq(10, 1, 1))
data.frame(x = c(seq(1, 10, 1)),
y = c(seq(10, 1, 1)))
data.frame(x = c(seq(1:10, 1)),
y = c(seq(10:1, 1)))
data.frame(x = c(seq(1:10, 1)),
y = c(seq(1:10, 1)))
data.frame(x = c(1:10),
y = c(1:10))
temp01 <- data.frame(x = c(1:10),
y = c(1:10))
temp02 <- temp01 magrittr::%>% dplyr::mutate(z = x + y)
devtools::use_package("dplyr")
install.packages("devtools")
install.packages("devtools")
usethis::use_package("dplyr")
usethis::use_package("dplyr", "httr", "jsonlite", "magrittr")
usethis::use_package(c"dplyr", "httr", "jsonlite", "magrittr"))
usethis::use_package(c("dplyr", "httr", "jsonlite", "magrittr"))
usethis::use_package("dplyr")
usethis::use_package("dplyr")
View(temp01)
devtools::document()
devtools::load_all()
devtools::load_all()
g4sr?
?gfs_calendar
g4sr::gfs_setup()
g4sr::gfs_calendar(academicYear = 2020)
devtools::load_all()
g4sr::gfs_setup()
g4sr::gfs_calendar(academicYear = 2020)
devtools::uses_testthat()
usethis::use_testthat()
usethis::use_test()
usethis::use_test()
devtools::test()
usethis::proj_get()
usethis::use_test()
usethis::use_testthat()
usethis::use_test()
devtools::build_manual()
usethis::use_test()
usethis::use_test()
devtools::build_manual()
devtools::build_manual()
devtools::install()
devtools::install()
install.packages("glue")
install.packages("glue")
devtools::install()
install.packages("digest")
install.packages("digest")
devtools::install()
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
devtools::install()
devtools::install()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
library(g4sr)
library(g4sr)
gfs_calendar(academicYear = 2020)
.api_key
api_key
gfs_users_staff()
gfs_users_parent()
library(testthat)
library(g4sr)
devtools::use_vignette("my-vignette")
usethis::use_vignette("g4sr")
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::document()
library(g4sr)
devtools::document()
?gfs_behaviour
??gfs_behaviour
getwd()
devtools::install()
devtools::install()
devtools::install()
install.packages("rlang")
install.packages("rlang")
devtools::install()
devtools::install()
install.packages("Rcpp")
devtools::install()
??gfsr_behaviour_events
??gfs_behaviour_events
devtools::build_manual()
library(g4sr)
devtools::build_manual()
library(g4sr)
df <- gfs_behaviour_events_range(academicYear = 2020, goDateStart = "2020-03-15", "2020-03-16")
library(g4sr)
df <- gfs_behaviour_events_range(academicYear = 2020, goDateStart = "2020-03-15", "2020-03-16")
library(g4sr)
devtools::load_all(".")
library(g4sr)
gfs_setup()
df <- gfs_behaviour_events_range(academicYear = 2020, goDateStart = "2020-03-15", "2020-03-16")
library(g4sr)
library(g4sr)
library(g4sr)
library(g4sr)
devtools::build_manual()
library(g4sr)
library(g4sr)
devtools::build_manual()
library(g4sr)
library(g4sr)
library(g4sr)
library(g4sr)
devtools::build_manual()
devtools::build_manual()
library(g4sr)
devtools::build_manual()
devtools::build_manual()
library(g4sr)
library(g4sr)
devtools::build_manual()
library(g4sr)
library(g4sr)
devtools::build_manual()
library(g4sr)
library(g4sr)
devtools::build_manual()
library(g4sr)
library(g4sr)
devtools::build_manual()
library(g4sr)
devtools::build_manual()
library(g4sr)
library(g4sr)
devtools::build_manual()
library(g4sr)
library(g4sr)
library(g4sr)
devtools::build_manual()
library(g4sr)
library(g4sr)
devtools::build_manual()
library(g4sr)
devtools::build_manual()
file.exists("~/.ssh/id_rsa.pub")
devtools::build_readme()
devtools::build_readme()
install.packages("devtools")
install.packages("devtools")
devtools::install_github("r-lib/devtools")
devtools::install_github("r-lib/devtools")
install.packages("ps")
install.packages("ps")
devtools::install_github("r-lib/devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("usethis")
install.packages("testthat")
usethis::use_readme_rmd()
library(g4sr)
library(g4sr)
devtools::build_manual()
